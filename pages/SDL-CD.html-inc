<div class="pod">
<!-- INDEX START -->
<h3 id="TOP">Index</h3>

<ul><li><a href="#NAME">NAME</a></li>
<li><a href="#CATEGORY">CATEGORY</a></li>
<li><a href="#SYNOPSIS">SYNOPSIS</a></li>
<li><a href="#CONSTANTS">CONSTANTS</a></li>
<li><a href="#METHOD">METHOD</a>
<ul><li><a href="#new">new</a></li>
<li><a href="#status">status</a></li>
<li><a href="#play_tracks">play_tracks</a></li>
<li><a href="#play">play</a></li>
<li><a href="#pause">pause </a></li>
<li><a href="#resume">resume</a></li>
<li><a href="#stop">stop</a></li>
<li><a href="#eject">eject</a></li>
<li><a href="#id">id</a></li>
<li><a href="#num_tracks">num_tracks</a></li>
<li><a href="#cur_track">cur_track </a></li>
<li><a href="#track">track</a></li>
<li><a href="#FRAMES_TO_MSF">FRAMES_TO_MSF</a></li>
<li><a href="#MSF_TO_FRAMES">MSF_TO_FRAMES</a></li>
</ul>
</li>
<li><a href="#SEE_ALSO">SEE ALSO</a></li>
<li><a href="#AUTHORS">AUTHORS</a>
</li>
</ul><hr />
<!-- INDEX END -->

<h1 id="NAME">NAME</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="NAME_CONTENT">
<p>SDL::CD -- SDL Bindings for structure SDL_CD</p>

</div>
<h1 id="CATEGORY">CATEGORY</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="CATEGORY_CONTENT">
<p>Core, CDROM, Structure</p>

</div>
<h1 id="SYNOPSIS">SYNOPSIS</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="SYNOPSIS_CONTENT">
<pre> use SDL;
 use SDL::CDROM;
 use SDL::CD;

 SDL::init(SDL_INIT_CDROM);

 my $drives = SDL::CDROM::num_drives;

 if( $drives &gt; 0 )
 {
  my $CD = SDL::CD-&gt;new( 0 );

   if($CD)
   {
	... 
   }

 }

</pre>

</div>
<h1 id="CONSTANTS">CONSTANTS</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="CONSTANTS_CONTENT">
<p>The constants are exported by default. You can avoid this by doing:</p>
<pre> use SDL::CD ();

</pre>
<p>and access them directly:</p>
<pre> SDL::CD::CD_TRAYEMPTY;

</pre>
<p>or by choosing the export tags below:</p>
<p>Export tag: ':status'</p>
<pre> CD_TRAYEMPTY
 CD_STOPPED
 CD_PLAYING
 CD_PAUSED
 CD_ERROR

</pre>
<p>Export tag: ':defaults'</p>
<pre> CD_FPS
 SDL_MAX_TRACKS

</pre>

</div>
<h1 id="METHOD">METHOD</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="METHOD_CONTENT">

</div>
<h2 id="new">new</h2>
<div id="new_CONTENT">
<pre> my $CD = SDL::CD-&gt;new($drive)

</pre>
<p>Makes a new SDL::CD object. Returns <code>undef</code> if the drive is busy or inaccessible. </p>

</div>
<h2 id="status">status</h2>
<div id="status_CONTENT">
<pre> my $status = $CD-&gt;status(); 

</pre>
<p>Returns the current status of the CD tray </p>
<p>Returns on of the following constants:</p>
<ul>
		<li>CD_TRAYEMPTY	</li>
		<li>CD_STOPPED	</li>
		<li>CD_PLAYING	</li>
		<li>CD_PAUSED	</li>
		<li>CD_ERROR</li>
</ul>


</div>
<h2 id="play_tracks">play_tracks</h2>
<div id="play_tracks_CONTENT">
<pre> $CD-&gt;play_tracks($start_track, $start_frame, $ntracks, $nframes)

</pre>
<p>Plays the given SDL::CD starting at track $start_track, for $ntracks tracks.  </p>
<p>$start_frame is the frame offset, from the beginning of the $start_track, at which to start. $nframes is the frame offset, from the 
beginning of the last track ($start_track+$ntracks), at which to end playing.</p>
<p>play_tracks() should only be called after calling <a href="http://search.cpan.org/perldoc?">http://search.cpan.org/perldoc?</a> to get information about the CD.</p>
<p><strong>Note: Data tracks are ignored.</strong></p>
<p>Returns <code>0</code>, or <code>-1</code> if there was an error.  </p>

</div>
<h2 id="play">play</h2>
<div id="play_CONTENT">
<pre> $CD-&gt;play($start, $length);

</pre>
<p>Plays the given SDL::CD , starting a frame $start for $length frames. </p>
<p>Returns <code>0</code> on success, <code>-1</code> on error</p>

</div>
<h2 id="pause">pause </h2>
<div id="pause_CONTENT">
<pre> $CD-&gt;pause();

</pre>
<p>Pauses play on CD</p>
<p>Returns <code>0</code> on success, or <code>-1</code> on an error.  </p>

</div>
<h2 id="resume">resume</h2>
<div id="resume_CONTENT">
<pre> $CD-&gt;resume();

</pre>
<p>Returns <code>0</code> on success, or <code>-1</code> on an error.  </p>

</div>
<h2 id="stop">stop</h2>
<div id="stop_CONTENT">
<pre> $CD-&gt;stop();

</pre>
<p>Stops play on the CD.  </p>
<p>Returns <code>0</code> on success, or <code>-1</code> on an error.  </p>

</div>
<h2 id="eject">eject</h2>
<div id="eject_CONTENT">
<pre> $CD-&gt;eject();

</pre>
<p>Ejects the CD.</p>
<p>Returns <code>0</code> on success, or <code>-1</code> on an error.   </p>

</div>
<h2 id="id">id</h2>
<div id="id_CONTENT">
<pre> $CD-&gt;id();

</pre>
<p>Private drive identifier</p>

</div>
<h2 id="num_tracks">num_tracks</h2>
<div id="num_tracks_CONTENT">
<pre> $CD-&gt;num_tracks();

</pre>
<p>Number of tracks on the CD</p>

</div>
<h2 id="cur_track">cur_track </h2>
<div id="cur_track_CONTENT">
<pre> $CD-&gt;cur_track();

</pre>
<p>Current track on the CD;</p>

</div>
<h2 id="track">track</h2>
<div id="track_CONTENT">
<pre> my $track =  $CD-&gt;track($number);

</pre>
<p>Retrives track description of track $number in CD. See <a href="SDL-CDTrack.html">SDL::CDTrack</a>.</p>

</div>
<h2 id="FRAMES_TO_MSF">FRAMES_TO_MSF</h2>
<div id="FRAMES_TO_MSF_CONTENT">
<pre> my ($min, $sec, $fra) = FRAMES_TO_MSF($frames);

</pre>
<p>Conversion functions from frames to Minute/Second/Frames</p>

</div>
<h2 id="MSF_TO_FRAMES">MSF_TO_FRAMES</h2>
<div id="MSF_TO_FRAMES_CONTENT">
<pre> my $frames = MSF_TO_FRAMES($min, $sec, $fra);

</pre>

</div>
<h1 id="SEE_ALSO">SEE ALSO</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="SEE_ALSO_CONTENT">
<p><a href="SDL-CDROM.html">SDL::CDROM</a>, <a href="SDL-CDTrack.html">SDL::CDTrack</a></p>

</div>
<h1 id="AUTHORS">AUTHORS</h1><p><a href="#TOP" class="toplink">Top</a></p>
<div id="AUTHORS_CONTENT">
<p>See <a href="/SDL.html#AUTHORS">/SDL.html#AUTHORS</a>.</p>

</div>
</div>