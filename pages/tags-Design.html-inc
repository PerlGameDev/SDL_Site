<div class="blog"><h1>Results for tag: Design</h1><div><a href="blog-0008.html">The Future and Beyond!</a><br /><span style="font-size: 10px">Saturday, 24 October 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a> <a href="tags-games.html" style="font-size: 10px">[games]</a></span><br /> Updates Since the last post SDL Perl has seen an increase of interest to both use and contribute to SDL Perl. Before I dig into the updates, I would like to acknowledge them.<br /> Core Development  Acme ( Leon Brocard ):  Has started to work on the Redesign Effort with me. The help is much appreciated! Enjoy your vacation. <br /> Website and Windows Testing  FROGGS (Tobias Leich):  Came in as a new user to SDL Perl. And after breaking the redesigned SDL Perl in as many ways possible he has decided to help out on the new site. <br /><a href="blog-0008.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0009.html">The beginnings of modular design for SDL Perl</a><br /><span style="font-size: 10px">Sunday, 11 October 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br /> The design before <br />The bindings before were all in  one huge XS file . This was then exported into the SDL module. This means that the XS file has to handle with macros if any component (e.x SDL_Mixer) is not compiled. Moreover having ever binding in one XS file prevents use to treat C structs as object with only one point of free and malloc. This would be BEGIN and DESTROY in Perl. Also the monolithic design introduces a lot of bugs because we have to use free and malloc all over the place. Lastly SDL monolithic design has the constructor for all structs in both Perl and in XS. <br /> The design we are aiming for Simple  one XS  per Module. This would also simplify the Build code.<br /><a href="blog-0009.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0013.html">Thanks nothingmuch, and updates</a><br /><span style="font-size: 10px">Friday, 18 September 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Tutorial.html" style="font-size: 10px">[Tutorial]</a></span><br /> After a struggling with XS and opaque C structs in the experimental SDL::Rect for a long time.  Nothingmuch  comes along and solves my problem with this beautiful module  XS::Object::Magic . So I will start moving my ugly XS to Magic Land.<br /> SDL Perl Tutorials <br />This past week I have been working on the sorry state of SDL Perl tutorials. Currently I am working on a  Tetris Clone . I am hoping to have it done by next Thrusday for TPM meeting. This tutorial is a mix of several tutorials I  found online . Another  Lunar Lander tutorial  has been submitted by Nelson Ferraz.<br /><a href="blog-0013.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0014.html">Design of SDL::Rect</a><br /><span style="font-size: 10px">Saturday, 12 September 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a></span><br />Lately we have been working on cleaning up the XS name spaces of SDL perl. After some bumps and falls we came up with a separated Rect module. Rect is one of the most simple C struct as shown below. <br />  <br />Using the awesome  perlobject.map  as a reference I was able to create a  blessed perl  object in  XS . So now SDL::Rect-&gt;new(...) gave us a blessed reference ready to go. And as an icing it would destroy itself properly no matter where it was used. But once I brought it into our existing code base, garu pointed out the extending it was a little bit of a mess. So far to extend Rect we have to something like below. Any comment or advice would be much appreciated.<br /><a href="blog-0014.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0015.html">Updates and Design Decisions</a><br /><span style="font-size: 10px">Wednesday, 09 September 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br /> <br /> <br /> --yapgh <br /><a href="blog-0015.html" style="font-size: 12px">[more]</a><br /><br /></div></div>