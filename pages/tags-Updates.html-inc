<div class="blog"><h1>Results for tag: Updates</h1><div><a href="blog-0007.html">Development Update</a><br /><span style="font-size: 10px">Monday, 09 November 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br />Had an exam on the weekend so I am a bit late. Here is the progress so far. <br />   SDL::Video at 97%    SDL::Events at 25%    ~1000 tests cases passing on Windows and Linux   <br />    <br /><a href="blog-0007.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0008.html">Development Update</a><br /><span style="font-size: 10px">Monday, 02 November 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br />In the past week the SDL Perl team has been busy! This is what we have accomplished<br /> Commitment to Testing! In an effort to focus on continuing our focus on testing we have setup a  Smolder  site for the SDL redesign process. Currently we have two platforms (linux, windows32) regularly tested on here. If there are more people following the redesign process and would like to share their test results; contact us at sdl-devel@perl.org and we will provide access to you.<br /> SDL::Video For the core development most of the focus has been on redesigning around the Video category of the SDL perl API. As of now we are  50% done . 19 functions out of 38 functions have been implemented and tested. <br /><a href="blog-0008.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0009.html">The Future and Beyond!</a><br /><span style="font-size: 10px">Saturday, 24 October 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a> <a href="tags-games.html" style="font-size: 10px">[games]</a></span><br /> Updates Since the last post SDL Perl has seen an increase of interest to both use and contribute to SDL Perl. Before I dig into the updates, I would like to acknowledge them.<br /> Core Development  Acme ( Leon Brocard ):  Has started to work on the Redesign Effort with me. The help is much appreciated! Enjoy your vacation. <br /> Website and Windows Testing  FROGGS (Tobias Leich):  Came in as a new user to SDL Perl. And after breaking the redesigned SDL Perl in as many ways possible he has decided to help out on the new site. <br /><a href="blog-0009.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0010.html">The beginnings of modular design for SDL Perl</a><br /><span style="font-size: 10px">Sunday, 11 October 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br /> The design before <br />The bindings before were all in  one huge XS file . This was then exported into the SDL module. This means that the XS file has to handle with macros if any component (e.x SDL_Mixer) is not compiled. Moreover having ever binding in one XS file prevents use to treat C structs as object with only one point of free and malloc. This would be BEGIN and DESTROY in Perl. Also the monolithic design introduces a lot of bugs because we have to use free and malloc all over the place. Lastly SDL monolithic design has the constructor for all structs in both Perl and in XS. <br /> The design we are aiming for Simple  one XS  per Module. This would also simplify the Build code.<br /><a href="blog-0010.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0016.html">Updates and Design Decisions</a><br /><span style="font-size: 10px">Wednesday, 09 September 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Design.html" style="font-size: 10px">[Design]</a> <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br /> <br /> <br /> --yapgh <br /><a href="blog-0016.html" style="font-size: 12px">[more]</a><br /><br /></div><hr /><div><a href="blog-0022.html">Updates on Plan for v2.4</a><br /><span style="font-size: 10px">Monday, 31 August 2009</span><br /><span style="font-size: 10px">Tags:  <a href="tags-Perl.html" style="font-size: 10px">[Perl]</a> <a href="tags-SDL.html" style="font-size: 10px">[SDL]</a> <a href="tags-Updates.html" style="font-size: 10px">[Updates]</a></span><br /> After some hunting for memory leaks, it became obvious that some   rewrite of XS will be necessary. Since this will be a big undertaking   I asked for some help from  chromatic  and  garu . We came up with the   following plan for v2.4. <br /> Currently all XS is mapped to the SDL_perl module. This does not reflect the modular nature of the sdl libs. So the plan is to gradually move SDL structs and their respective functions to their correct namespaces. We will start with SDL::Rect as garu has  added many tests    for it. This way the build system will be a lot easier to hack since Module::Build was made for one XS per module. Moreover we will move the Build utilities to Alien::SDL, making it even simpler. The main idea is to adhere to single responsibility principle and encapsulation.  <br /> Obviously this will take some time and effort, but it will pay off in the long run. Any help will be greatly appreciated. <br /><a href="blog-0022.html" style="font-size: 12px">[more]</a><br /><br /></div></div>